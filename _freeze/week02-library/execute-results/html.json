{
  "hash": "c12555da423d9506e7c050b569695662",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Week 02: Library Survey Tables Case Study\"\nauthor: \"Eric Araujo\"\ndate: \"2023-09-18\"\nformat:\n  html:\n    code-fold: false\njupyter: python3\n---\n\n## 0. Creating the Library Survey Tables\n\nIn the US, the Institute of Museum and Library Services (IMLS) measures library activity as part of its annual Public Libraries Survey. The survey collects data from more than 9000 library administrative entities, defined by the survey as agencies that provide library services to a particular locality. Data includes the number of branches, staff, books, hours open per year, etc. To teach the concepts below, we will build three tables containing the data from the survey related to the years of 2016, 2017 and 2018. For doing so, we read from the CSV files downloaded from their website. More especifically, some columns will be selected in the process to reduce the amount of non used attributes.\n\nWe are running SQL queries in a Jupyter environment. \n\n::: {#cell-2 .cell execution_count=1}\n``` {.python .cell-code}\n%%capture\n%load_ext sql\n%sql sqlite:///dbs/w02/library.db\n%config SqlMagic.style = '_DEPRECATED_DEFAULT'\n```\n:::\n\n\nThis will open our database `library.db` for us. Don't bother yourself with the config details. That is a trick to run the SQL queries in this environment.\n\nNow we turn to our tables. We have to create 3 tables. Let's start with the table for 2018.\n\n::: {#cell-4 .cell execution_count=2}\n``` {.python .cell-code}\n%%sql\n-- Creating the 2018 Public Libraries Survey table\n\n-- We drop an old copy of the table, if it exists.\nDROP TABLE IF EXISTS libraries_2018;\n\nCREATE TABLE libraries_2018 (\n    stabr text NOT NULL,\n    fscskey text CONSTRAINT fscskey_2018_pkey PRIMARY KEY,\n    libid text NOT NULL,\n    libname text NOT NULL,\n    address text NOT NULL,\n    city text NOT NULL,\n    zip text NOT NULL,\n    county text NOT NULL,\n    phone text NOT NULL,\n    c_relatn text NOT NULL,\n    c_legbas text NOT NULL,\n    c_admin text NOT NULL,\n    c_fscs text NOT NULL,\n    geocode text NOT NULL,\n    lsabound text NOT NULL,\n    startdate text NOT NULL,\n    enddate text NOT NULL,\n    popu_lsa integer NOT NULL,\n    popu_und integer NOT NULL,\n    centlib integer NOT NULL,\n    branlib integer NOT NULL,\n    bkmob integer NOT NULL,\n    totstaff numeric(8,2) NOT NULL,\n    bkvol integer NOT NULL,\n    ebook integer NOT NULL,\n    audio_ph integer NOT NULL,\n    audio_dl integer NOT NULL,\n    video_ph integer NOT NULL,\n    video_dl integer NOT NULL,\n    ec_lo_ot integer NOT NULL,\n    subscrip integer NOT NULL,\n    hrs_open integer NOT NULL,\n    visits integer NOT NULL,\n    reference integer NOT NULL,\n    regbor integer NOT NULL,\n    totcir integer NOT NULL,\n    kidcircl integer NOT NULL,\n    totpro integer NOT NULL,\n    gpterms integer NOT NULL,\n    pitusr integer NOT NULL,\n    wifisess integer NOT NULL,\n    obereg text NOT NULL,\n    statstru text NOT NULL,\n    statname text NOT NULL,\n    stataddr text NOT NULL,\n    longitude numeric(10,7) NOT NULL,\n    latitude numeric(10,7) NOT NULL\n);\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n * sqlite:///dbs/w02/library.db\nDone.\nDone.\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=2}\n```\n[]\n```\n:::\n:::\n\n\n**This is** an empty table. To fill the table, we need to convert our CSV entries to entitites in our database.\n\nHere I came up with another trick. I created a subprocess that opens SQLite3 and calls the command to convert a CSV file into a table inside the database. The code is as follows:\n\n::: {#cell-6 .cell execution_count=3}\n``` {.python .cell-code}\nimport subprocess\nimport tempfile\nimport os\n\n# Paths and settings\ncsv_path = \"dbs/w02/pls_fy2018_libraries.csv\"\ndb_path = \"dbs/w02/library.db\"\ntable_name = \"libraries_2018\"\n\n# Step 1: Create a temporary CSV file without the header\nwith open(csv_path, 'r', encoding='utf-8') as original, tempfile.NamedTemporaryFile('w', delete=False, newline='', encoding='utf-8') as noheader:\n    next(original)  # skip the header\n    for line in original:\n        noheader.write(line)\n    temp_csv_path = noheader.name\n\n# Step 2: Build the SQLite shell command\nsqlite_cmd = f\"\"\"\n.mode csv\n.import '{temp_csv_path}' {table_name}\n\"\"\"\n\n# Step 3: Run the command with subprocess\nsubprocess.run([\"sqlite3\", db_path], input=sqlite_cmd, text=True)\n\n# Step 4: Clean up the temp file\nos.remove(temp_csv_path)\n\nprint(f\"✅ Imported '{csv_path}' into '{table_name}' in '{db_path}' (header skipped)\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n✅ Imported 'dbs/w02/pls_fy2018_libraries.csv' into 'libraries_2018' in 'dbs/w02/library.db' (header skipped)\n```\n:::\n:::\n\n\n---\n\n**Let's see** if the data was loaded? Let's peak on the 10 first rows.\n\n::: {#cell-8 .cell execution_count=4}\n``` {.python .cell-code}\n%%sql\nSELECT * FROM libraries_2018\nLIMIT 10;\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n * sqlite:///dbs/w02/library.db\nDone.\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=4}\n```{=html}\n<table>\n    <thead>\n        <tr>\n            <th>stabr</th>\n            <th>fscskey</th>\n            <th>libid</th>\n            <th>libname</th>\n            <th>address</th>\n            <th>city</th>\n            <th>zip</th>\n            <th>county</th>\n            <th>phone</th>\n            <th>c_relatn</th>\n            <th>c_legbas</th>\n            <th>c_admin</th>\n            <th>c_fscs</th>\n            <th>geocode</th>\n            <th>lsabound</th>\n            <th>startdate</th>\n            <th>enddate</th>\n            <th>popu_lsa</th>\n            <th>popu_und</th>\n            <th>centlib</th>\n            <th>branlib</th>\n            <th>bkmob</th>\n            <th>totstaff</th>\n            <th>bkvol</th>\n            <th>ebook</th>\n            <th>audio_ph</th>\n            <th>audio_dl</th>\n            <th>video_ph</th>\n            <th>video_dl</th>\n            <th>ec_lo_ot</th>\n            <th>subscrip</th>\n            <th>hrs_open</th>\n            <th>visits</th>\n            <th>reference</th>\n            <th>regbor</th>\n            <th>totcir</th>\n            <th>kidcircl</th>\n            <th>totpro</th>\n            <th>gpterms</th>\n            <th>pitusr</th>\n            <th>wifisess</th>\n            <th>obereg</th>\n            <th>statstru</th>\n            <th>statname</th>\n            <th>stataddr</th>\n            <th>longitude</th>\n            <th>latitude</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>AK</td>\n            <td>AK0001</td>\n            <td>AK0001-002</td>\n            <td>ANCHOR POINT PUBLIC LIBRARY</td>\n            <td>34020 NORTH FORK ROAD</td>\n            <td>ANCHOR POINT</td>\n            <td>99556</td>\n            <td>KENAI PENINSULA</td>\n            <td>9072355692</td>\n            <td>NO</td>\n            <td>NP</td>\n            <td>SO</td>\n            <td>Y</td>\n            <td>CI1</td>\n            <td>N</td>\n            <td>7/1/17</td>\n            <td>6/30/18</td>\n            <td>2057</td>\n            <td>2040</td>\n            <td>1</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0.67</td>\n            <td>18201</td>\n            <td>0</td>\n            <td>179</td>\n            <td>0</td>\n            <td>3320</td>\n            <td>0</td>\n            <td>0</td>\n            <td>9</td>\n            <td>1245</td>\n            <td>6032</td>\n            <td>4</td>\n            <td>1726</td>\n            <td>11316</td>\n            <td>2294</td>\n            <td>60</td>\n            <td>8</td>\n            <td>1495</td>\n            <td>1182</td>\n            <td>08</td>\n            <td>00</td>\n            <td>00</td>\n            <td>00</td>\n            <td>-151.825</td>\n            <td>59.77965</td>\n        </tr>\n        <tr>\n            <td>AK</td>\n            <td>AK0002</td>\n            <td>AK0002-011</td>\n            <td>ANCHORAGE PUBLIC LIBRARY</td>\n            <td>3600 DENALI STREET</td>\n            <td>ANCHORAGE</td>\n            <td>99503</td>\n            <td>ANCHORAGE</td>\n            <td>9073432892</td>\n            <td>NO</td>\n            <td>CO</td>\n            <td>MO</td>\n            <td>Y</td>\n            <td>MA1</td>\n            <td>N</td>\n            <td>1/1/17</td>\n            <td>12/31/17</td>\n            <td>295365</td>\n            <td>292940</td>\n            <td>1</td>\n            <td>4</td>\n            <td>0</td>\n            <td>76.65</td>\n            <td>370812</td>\n            <td>21587</td>\n            <td>30963</td>\n            <td>12992</td>\n            <td>76404</td>\n            <td>0</td>\n            <td>14</td>\n            <td>7311</td>\n            <td>11400</td>\n            <td>723272</td>\n            <td>54306</td>\n            <td>135828</td>\n            <td>1574942</td>\n            <td>553651</td>\n            <td>1924</td>\n            <td>165</td>\n            <td>126846</td>\n            <td>90135</td>\n            <td>08</td>\n            <td>00</td>\n            <td>00</td>\n            <td>00</td>\n            <td>-149.876</td>\n            <td>61.18744</td>\n        </tr>\n        <tr>\n            <td>AK</td>\n            <td>AK0003</td>\n            <td>AK0003-002</td>\n            <td>ANDERSON COMMUNITY LIBRARY</td>\n            <td>101 FIRST STREET</td>\n            <td>ANDERSON</td>\n            <td>99744</td>\n            <td>DENALI</td>\n            <td>9075822628</td>\n            <td>NO</td>\n            <td>CI</td>\n            <td>SO</td>\n            <td>Y</td>\n            <td>CI1</td>\n            <td>N</td>\n            <td>7/1/17</td>\n            <td>6/30/18</td>\n            <td>269</td>\n            <td>267</td>\n            <td>1</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0.75</td>\n            <td>15314</td>\n            <td>0</td>\n            <td>201</td>\n            <td>0</td>\n            <td>1403</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>480</td>\n            <td>592</td>\n            <td>300</td>\n            <td>113</td>\n            <td>1137</td>\n            <td>264</td>\n            <td>4</td>\n            <td>5</td>\n            <td>225</td>\n            <td>0</td>\n            <td>08</td>\n            <td>00</td>\n            <td>00</td>\n            <td>00</td>\n            <td>-149.187</td>\n            <td>64.34363</td>\n        </tr>\n        <tr>\n            <td>AK</td>\n            <td>AK0006</td>\n            <td>AK0006-002</td>\n            <td>KUSKOKWIM CONSORTIUM LIBRARY</td>\n            <td>420 CHIEF EDDIE HOFFMAN HIGHWAY</td>\n            <td>BETHEL</td>\n            <td>99559</td>\n            <td>BETHEL</td>\n            <td>9075434516</td>\n            <td>NO</td>\n            <td>MJ</td>\n            <td>SO</td>\n            <td>Y</td>\n            <td>CI1</td>\n            <td>N</td>\n            <td>7/1/17</td>\n            <td>6/30/18</td>\n            <td>6135</td>\n            <td>6085</td>\n            <td>1</td>\n            <td>0</td>\n            <td>0</td>\n            <td>3</td>\n            <td>34860</td>\n            <td>21587</td>\n            <td>425</td>\n            <td>12992</td>\n            <td>3782</td>\n            <td>0</td>\n            <td>0</td>\n            <td>5</td>\n            <td>2040</td>\n            <td>51000</td>\n            <td>1530</td>\n            <td>1912</td>\n            <td>14067</td>\n            <td>3746</td>\n            <td>406</td>\n            <td>8</td>\n            <td>6600</td>\n            <td>5716</td>\n            <td>08</td>\n            <td>00</td>\n            <td>00</td>\n            <td>00</td>\n            <td>-161.771</td>\n            <td>60.79114</td>\n        </tr>\n        <tr>\n            <td>AK</td>\n            <td>AK0007</td>\n            <td>AK0007-002</td>\n            <td>BIG LAKE PUBLIC LIBRARY</td>\n            <td>3140 SOUTH BIG LAKE ROAD</td>\n            <td>BIG LAKE</td>\n            <td>99652</td>\n            <td>MATANUSKA-SUSITNA</td>\n            <td>9078617635</td>\n            <td>NO</td>\n            <td>CO</td>\n            <td>SO</td>\n            <td>Y</td>\n            <td>CO1</td>\n            <td>N</td>\n            <td>7/1/17</td>\n            <td>6/30/18</td>\n            <td>12847</td>\n            <td>12742</td>\n            <td>1</td>\n            <td>0</td>\n            <td>0</td>\n            <td>3</td>\n            <td>28698</td>\n            <td>21587</td>\n            <td>2140</td>\n            <td>12992</td>\n            <td>3805</td>\n            <td>0</td>\n            <td>0</td>\n            <td>47</td>\n            <td>2551</td>\n            <td>62249</td>\n            <td>887</td>\n            <td>2890</td>\n            <td>36670</td>\n            <td>15691</td>\n            <td>363</td>\n            <td>18</td>\n            <td>15022</td>\n            <td>8125</td>\n            <td>08</td>\n            <td>00</td>\n            <td>00</td>\n            <td>00</td>\n            <td>-149.819</td>\n            <td>61.5475</td>\n        </tr>\n        <tr>\n            <td>AK</td>\n            <td>AK0008</td>\n            <td>AK0008-002</td>\n            <td>CANTWELL COMMUNITY LIBRARY</td>\n            <td>1 SCHOOL ROAD</td>\n            <td>CANTWELL</td>\n            <td>99729</td>\n            <td>DENALI</td>\n            <td>9077682372</td>\n            <td>NO</td>\n            <td>NP</td>\n            <td>SO</td>\n            <td>Y</td>\n            <td>CI1</td>\n            <td>N</td>\n            <td>7/1/17</td>\n            <td>6/30/18</td>\n            <td>202</td>\n            <td>200</td>\n            <td>1</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0.8</td>\n            <td>10376</td>\n            <td>21587</td>\n            <td>275</td>\n            <td>12992</td>\n            <td>562</td>\n            <td>0</td>\n            <td>0</td>\n            <td>15</td>\n            <td>720</td>\n            <td>2500</td>\n            <td>390</td>\n            <td>183</td>\n            <td>2828</td>\n            <td>1198</td>\n            <td>45</td>\n            <td>1</td>\n            <td>50</td>\n            <td>95</td>\n            <td>08</td>\n            <td>00</td>\n            <td>00</td>\n            <td>00</td>\n            <td>-148.9</td>\n            <td>63.3912</td>\n        </tr>\n        <tr>\n            <td>AK</td>\n            <td>AK0011</td>\n            <td>AK0011-002</td>\n            <td>CHINIAK PUBLIC LIBRARY</td>\n            <td>43318 SPRUCE WAY</td>\n            <td>CHINIAK</td>\n            <td>99615</td>\n            <td>KODIAK ISLAND</td>\n            <td>9075120880</td>\n            <td>NO</td>\n            <td>NP</td>\n            <td>SO</td>\n            <td>N</td>\n            <td>CI1</td>\n            <td>N</td>\n            <td>7/1/17</td>\n            <td>6/30/18</td>\n            <td>44</td>\n            <td>44</td>\n            <td>1</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>2300</td>\n            <td>21587</td>\n            <td>0</td>\n            <td>12992</td>\n            <td>257</td>\n            <td>0</td>\n            <td>0</td>\n            <td>18</td>\n            <td>132</td>\n            <td>302</td>\n            <td>0</td>\n            <td>39</td>\n            <td>465</td>\n            <td>301</td>\n            <td>27</td>\n            <td>2</td>\n            <td>75</td>\n            <td>220</td>\n            <td>08</td>\n            <td>00</td>\n            <td>00</td>\n            <td>00</td>\n            <td>-152.231</td>\n            <td>57.61245</td>\n        </tr>\n        <tr>\n            <td>AK</td>\n            <td>AK0014</td>\n            <td>AK0014-002</td>\n            <td>COLD BAY PUBLIC LIBRARY</td>\n            <td>10 BARANOV ROAD</td>\n            <td>COLD BAY</td>\n            <td>99571</td>\n            <td>ALEUTIANS EAST</td>\n            <td>9075322878</td>\n            <td>NO</td>\n            <td>NP</td>\n            <td>SO</td>\n            <td>Y</td>\n            <td>CI1</td>\n            <td>N</td>\n            <td>7/1/17</td>\n            <td>6/30/18</td>\n            <td>63</td>\n            <td>62</td>\n            <td>1</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0.25</td>\n            <td>3226</td>\n            <td>0</td>\n            <td>445</td>\n            <td>0</td>\n            <td>2673</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>400</td>\n            <td>1080</td>\n            <td>31</td>\n            <td>36</td>\n            <td>121</td>\n            <td>11</td>\n            <td>5</td>\n            <td>4</td>\n            <td>235</td>\n            <td>893</td>\n            <td>08</td>\n            <td>00</td>\n            <td>00</td>\n            <td>00</td>\n            <td>-160.693</td>\n            <td>55.69687</td>\n        </tr>\n        <tr>\n            <td>AK</td>\n            <td>AK0015</td>\n            <td>AK0015-002</td>\n            <td>COOPER LANDING COMMUNITY LIBRARY</td>\n            <td>18511 BEAN CREEK ROAD</td>\n            <td>COOPER LANDING</td>\n            <td>99572</td>\n            <td>KENAI PENINSULA</td>\n            <td>9075951241</td>\n            <td>NO</td>\n            <td>NP</td>\n            <td>SO</td>\n            <td>N</td>\n            <td>CI1</td>\n            <td>N</td>\n            <td>7/1/17</td>\n            <td>6/30/18</td>\n            <td>265</td>\n            <td>263</td>\n            <td>1</td>\n            <td>0</td>\n            <td>0</td>\n            <td>0</td>\n            <td>4163</td>\n            <td>0</td>\n            <td>192</td>\n            <td>0</td>\n            <td>926</td>\n            <td>0</td>\n            <td>0</td>\n            <td>1</td>\n            <td>1092</td>\n            <td>2452</td>\n            <td>70</td>\n            <td>834</td>\n            <td>2232</td>\n            <td>772</td>\n            <td>11</td>\n            <td>4</td>\n            <td>395</td>\n            <td>357</td>\n            <td>08</td>\n            <td>00</td>\n            <td>00</td>\n            <td>00</td>\n            <td>-149.823</td>\n            <td>60.49404</td>\n        </tr>\n        <tr>\n            <td>AK</td>\n            <td>AK0016</td>\n            <td>AK0016-002</td>\n            <td>CORDOVA PUBLIC LIBRARY</td>\n            <td>601 FIRST STREET</td>\n            <td>CORDOVA</td>\n            <td>99574</td>\n            <td>VALDEZ-CORDOVA</td>\n            <td>9074246667</td>\n            <td>NO</td>\n            <td>CI</td>\n            <td>SO</td>\n            <td>Y</td>\n            <td>CI1</td>\n            <td>N</td>\n            <td>1/1/17</td>\n            <td>12/31/17</td>\n            <td>2360</td>\n            <td>2341</td>\n            <td>1</td>\n            <td>0</td>\n            <td>0</td>\n            <td>5</td>\n            <td>17888</td>\n            <td>21587</td>\n            <td>560</td>\n            <td>12992</td>\n            <td>1200</td>\n            <td>0</td>\n            <td>0</td>\n            <td>48</td>\n            <td>2575</td>\n            <td>20844</td>\n            <td>1024</td>\n            <td>2527</td>\n            <td>14435</td>\n            <td>4298</td>\n            <td>282</td>\n            <td>6</td>\n            <td>5357</td>\n            <td>6997</td>\n            <td>08</td>\n            <td>00</td>\n            <td>00</td>\n            <td>00</td>\n            <td>-145.758</td>\n            <td>60.54716</td>\n        </tr>\n    </tbody>\n</table>\n```\n:::\n:::\n\n\n**Now, lets** count how many rows are in this table.\n\n::: {#cell-10 .cell execution_count=5}\n``` {.python .cell-code}\n%%sql\nSELECT count(*) FROM libraries_2018;\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n * sqlite:///dbs/w02/library.db\nDone.\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=5}\n```{=html}\n<table>\n    <thead>\n        <tr>\n            <th>count(*)</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>9261</td>\n        </tr>\n    </tbody>\n</table>\n```\n:::\n:::\n\n\n---\n\n**The same** should be done for the years 2016 and 2017. The code below is long, but identical to what we've done above.\n\n::: {#cell-12 .cell execution_count=6}\n``` {.python .cell-code}\n%%sql\n\n-- Creating the 2016 Public Libraries Survey table\n\n-- We drop an old copy of the table, if it exists.\nDROP TABLE IF EXISTS libraries_2016;\nDROP TABLE IF EXISTS libraries_2017;\n\nCREATE TABLE libraries_2016 (\n    stabr text NOT NULL,\n    fscskey text CONSTRAINT fscskey_2018_pkey PRIMARY KEY,\n    libid text NOT NULL,\n    libname text NOT NULL,\n    address text NOT NULL,\n    city text NOT NULL,\n    zip text NOT NULL,\n    county text NOT NULL,\n    phone text NOT NULL,\n    c_relatn text NOT NULL,\n    c_legbas text NOT NULL,\n    c_admin text NOT NULL,\n    c_fscs text NOT NULL,\n    geocode text NOT NULL,\n    lsabound text NOT NULL,\n    startdate text NOT NULL,\n    enddate text NOT NULL,\n    popu_lsa integer NOT NULL,\n    popu_und integer NOT NULL,\n    centlib integer NOT NULL,\n    branlib integer NOT NULL,\n    bkmob integer NOT NULL,\n    totstaff numeric(8,2) NOT NULL,\n    bkvol integer NOT NULL,\n    ebook integer NOT NULL,\n    audio_ph integer NOT NULL,\n    audio_dl integer NOT NULL,\n    video_ph integer NOT NULL,\n    video_dl integer NOT NULL,\n    ec_lo_ot integer NOT NULL,\n    subscrip integer NOT NULL,\n    hrs_open integer NOT NULL,\n    visits integer NOT NULL,\n    reference integer NOT NULL,\n    regbor integer NOT NULL,\n    totcir integer NOT NULL,\n    kidcircl integer NOT NULL,\n    totpro integer NOT NULL,\n    gpterms integer NOT NULL,\n    pitusr integer NOT NULL,\n    wifisess integer NOT NULL,\n    obereg text NOT NULL,\n    statstru text NOT NULL,\n    statname text NOT NULL,\n    stataddr text NOT NULL,\n    longitude numeric(10,7) NOT NULL,\n    latitude numeric(10,7) NOT NULL\n);\n\nCREATE TABLE libraries_2017 (\n    stabr text NOT NULL,\n    fscskey text CONSTRAINT fscskey_2018_pkey PRIMARY KEY,\n    libid text NOT NULL,\n    libname text NOT NULL,\n    address text NOT NULL,\n    city text NOT NULL,\n    zip text NOT NULL,\n    county text NOT NULL,\n    phone text NOT NULL,\n    c_relatn text NOT NULL,\n    c_legbas text NOT NULL,\n    c_admin text NOT NULL,\n    c_fscs text NOT NULL,\n    geocode text NOT NULL,\n    lsabound text NOT NULL,\n    startdate text NOT NULL,\n    enddate text NOT NULL,\n    popu_lsa integer NOT NULL,\n    popu_und integer NOT NULL,\n    centlib integer NOT NULL,\n    branlib integer NOT NULL,\n    bkmob integer NOT NULL,\n    totstaff numeric(8,2) NOT NULL,\n    bkvol integer NOT NULL,\n    ebook integer NOT NULL,\n    audio_ph integer NOT NULL,\n    audio_dl integer NOT NULL,\n    video_ph integer NOT NULL,\n    video_dl integer NOT NULL,\n    ec_lo_ot integer NOT NULL,\n    subscrip integer NOT NULL,\n    hrs_open integer NOT NULL,\n    visits integer NOT NULL,\n    reference integer NOT NULL,\n    regbor integer NOT NULL,\n    totcir integer NOT NULL,\n    kidcircl integer NOT NULL,\n    totpro integer NOT NULL,\n    gpterms integer NOT NULL,\n    pitusr integer NOT NULL,\n    wifisess integer NOT NULL,\n    obereg text NOT NULL,\n    statstru text NOT NULL,\n    statname text NOT NULL,\n    stataddr text NOT NULL,\n    longitude numeric(10,7) NOT NULL,\n    latitude numeric(10,7) NOT NULL\n);\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n * sqlite:///dbs/w02/library.db\nDone.\nDone.\nDone.\nDone.\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=6}\n```\n[]\n```\n:::\n:::\n\n\n::: {#cell-13 .cell execution_count=7}\n``` {.python .cell-code}\n# Importing the 2017 Public Libraries Survey data\n\n# Paths and settings\ncsv_path = \"dbs/w02/pls_fy2017_libraries.csv\"\ndb_path = \"dbs/w02/library.db\"\ntable_name = \"libraries_2017\"\n\n# Step 1: Create a temporary CSV file without the header\nwith open(csv_path, 'r', encoding='utf-8') as original, tempfile.NamedTemporaryFile('w', delete=False, newline='', encoding='utf-8') as noheader:\n    next(original)  # skip the header\n    for line in original:\n        noheader.write(line)\n    temp_csv_path = noheader.name\n\n# Step 2: Build the SQLite shell command\nsqlite_cmd = f\"\"\"\n.mode csv\n.import '{temp_csv_path}' {table_name}\n\"\"\"\n\n# Step 3: Run the command with subprocess\nsubprocess.run([\"sqlite3\", db_path], input=sqlite_cmd, text=True)\n\n# Step 4: Clean up the temp file\nos.remove(temp_csv_path)\n\nprint(f\"✅ Imported '{csv_path}' into '{table_name}' in '{db_path}' (header skipped)\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n✅ Imported 'dbs/w02/pls_fy2017_libraries.csv' into 'libraries_2017' in 'dbs/w02/library.db' (header skipped)\n```\n:::\n:::\n\n\n::: {#cell-14 .cell execution_count=8}\n``` {.python .cell-code}\n# Importing the 2016 Public Libraries Survey data\n\n# Paths and settings\ncsv_path = \"dbs/w02/pls_fy2016_libraries.csv\"\ndb_path = \"dbs/w02/library.db\"\ntable_name = \"libraries_2016\"\n\n# Step 1: Create a temporary CSV file without the header\nwith open(csv_path, 'r', encoding='utf-8') as original, tempfile.NamedTemporaryFile('w', delete=False, newline='', encoding='utf-8') as noheader:\n    next(original)  # skip the header\n    for line in original:\n        noheader.write(line)\n    temp_csv_path = noheader.name\n\n# Step 2: Build the SQLite shell command\nsqlite_cmd = f\"\"\"\n.mode csv\n.import '{temp_csv_path}' {table_name}\n\"\"\"\n\n# Step 3: Run the command with subprocess\nsubprocess.run([\"sqlite3\", db_path], input=sqlite_cmd, text=True)\n\n# Step 4: Clean up the temp file\nos.remove(temp_csv_path)\n\nprint(f\"✅ Imported '{csv_path}' into '{table_name}' in '{db_path}' (header skipped)\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n✅ Imported 'dbs/w02/pls_fy2016_libraries.csv' into 'libraries_2016' in 'dbs/w02/library.db' (header skipped)\n```\n:::\n:::\n\n\n\n---\n\n**Let's check** the rows count for each of the tables now.\n\n::: {#cell-16 .cell execution_count=9}\n``` {.python .cell-code}\n%%sql\n    SELECT 2016 AS 'Year', count(*) AS NumRows FROM libraries_2016\nUNION ALL\n    SELECT 2017, count(*) AS NumRows FROM libraries_2017\nUNION ALL\n    SELECT 2018, count(*) AS NumRows FROM libraries_2018;\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n * sqlite:///dbs/w02/library.db\nDone.\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=9}\n```{=html}\n<table>\n    <thead>\n        <tr>\n            <th>Year</th>\n            <th>NumRows</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>2016</td>\n            <td>9252</td>\n        </tr>\n        <tr>\n            <td>2017</td>\n            <td>9245</td>\n        </tr>\n        <tr>\n            <td>2018</td>\n            <td>9261</td>\n        </tr>\n    </tbody>\n</table>\n```\n:::\n:::\n\n\n## 1.1 Counting Distinct Values in a Column\n\nWe can combine `DISTINCT` with combinations of values like `count()`. This will return a count of distinct values from a column.\n\n::: {#cell-18 .cell execution_count=10}\n``` {.python .cell-code}\n%%sql\nSELECT count(libname)\nFROM libraries_2017;\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n * sqlite:///dbs/w02/library.db\nDone.\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=10}\n```{=html}\n<table>\n    <thead>\n        <tr>\n            <th>count(libname)</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>9245</td>\n        </tr>\n    </tbody>\n</table>\n```\n:::\n:::\n\n\n::: {#cell-19 .cell execution_count=11}\n``` {.python .cell-code}\n%%sql\nSELECT count(DISTINCT libname)\nFROM libraries_2017;\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n * sqlite:///dbs/w02/library.db\nDone.\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=11}\n```{=html}\n<table>\n    <thead>\n        <tr>\n            <th>count(DISTINCT libname)</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>8455</td>\n        </tr>\n    </tbody>\n</table>\n```\n:::\n:::\n\n\n---\n\nRemoving duplicates reduces the number of library names. It happens that some libraries share their names with other agencies. We will see how we can see the duplicates soon.\n\n\n## 1.2 Finding Maximum and Minimum Values using max() and min()\n\nThe `max()` and `min()` funtions return the largest and smallest values in a column. In our case, we will be using them to detect some annomalies in the data. Let's check the number of visits for 2018.\n\n::: {#cell-22 .cell execution_count=12}\n``` {.python .cell-code}\n%%sql\nSELECT max(visits), min(visits)\nFROM libraries_2018;\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n * sqlite:///dbs/w02/library.db\nDone.\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=12}\n```{=html}\n<table>\n    <thead>\n        <tr>\n            <th>max(visits)</th>\n            <th>min(visits)</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>16686945</td>\n            <td>-3</td>\n        </tr>\n    </tbody>\n</table>\n```\n:::\n:::\n\n\n---\n\nThe value of -3 is unexpected. It happens that the negative values for this database indicate \"not applicable\", used when a library has closed temporarily or permanently. This is a terrible way of coding missing data, but we can cope with that.\n\nWe could use `WHERE min(visits > 0)` to guarantee that only positive numbers are in the game.\n\nA better way of handling these situations would be using NULL values and adding a column to hold text explaining why the value is NULL.\n\n## 1.3 Aggregating with GROUP BY\n\nWe can use the `GROUP BY` clause to group rows that have the same values in specified columns into summary rows. The `GROUP BY` statement is often used with aggregate functions like `COUNT()`, `SUM()`, `AVG()`, etc., to perform operations on each group of data.\n\nLet's see how many libraries are in each state. But first, let's check which states are in the database.\n\n::: {#cell-25 .cell execution_count=13}\n``` {.python .cell-code}\n%%sql\nSELECT stabr\nFROM libraries_2018\nGROUP BY stabr\nORDER BY stabr;\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n * sqlite:///dbs/w02/library.db\nDone.\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=13}\n```{=html}\n<table>\n    <thead>\n        <tr>\n            <th>stabr</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>AK</td>\n        </tr>\n        <tr>\n            <td>AL</td>\n        </tr>\n        <tr>\n            <td>AR</td>\n        </tr>\n        <tr>\n            <td>AS</td>\n        </tr>\n        <tr>\n            <td>AZ</td>\n        </tr>\n        <tr>\n            <td>CA</td>\n        </tr>\n        <tr>\n            <td>CO</td>\n        </tr>\n        <tr>\n            <td>CT</td>\n        </tr>\n        <tr>\n            <td>DC</td>\n        </tr>\n        <tr>\n            <td>DE</td>\n        </tr>\n        <tr>\n            <td>FL</td>\n        </tr>\n        <tr>\n            <td>GA</td>\n        </tr>\n        <tr>\n            <td>GU</td>\n        </tr>\n        <tr>\n            <td>HI</td>\n        </tr>\n        <tr>\n            <td>IA</td>\n        </tr>\n        <tr>\n            <td>ID</td>\n        </tr>\n        <tr>\n            <td>IL</td>\n        </tr>\n        <tr>\n            <td>IN</td>\n        </tr>\n        <tr>\n            <td>KS</td>\n        </tr>\n        <tr>\n            <td>KY</td>\n        </tr>\n        <tr>\n            <td>LA</td>\n        </tr>\n        <tr>\n            <td>MA</td>\n        </tr>\n        <tr>\n            <td>MD</td>\n        </tr>\n        <tr>\n            <td>ME</td>\n        </tr>\n        <tr>\n            <td>MI</td>\n        </tr>\n        <tr>\n            <td>MN</td>\n        </tr>\n        <tr>\n            <td>MO</td>\n        </tr>\n        <tr>\n            <td>MP</td>\n        </tr>\n        <tr>\n            <td>MS</td>\n        </tr>\n        <tr>\n            <td>MT</td>\n        </tr>\n        <tr>\n            <td>NC</td>\n        </tr>\n        <tr>\n            <td>ND</td>\n        </tr>\n        <tr>\n            <td>NE</td>\n        </tr>\n        <tr>\n            <td>NH</td>\n        </tr>\n        <tr>\n            <td>NJ</td>\n        </tr>\n        <tr>\n            <td>NM</td>\n        </tr>\n        <tr>\n            <td>NV</td>\n        </tr>\n        <tr>\n            <td>NY</td>\n        </tr>\n        <tr>\n            <td>OH</td>\n        </tr>\n        <tr>\n            <td>OK</td>\n        </tr>\n        <tr>\n            <td>OR</td>\n        </tr>\n        <tr>\n            <td>PA</td>\n        </tr>\n        <tr>\n            <td>RI</td>\n        </tr>\n        <tr>\n            <td>SC</td>\n        </tr>\n        <tr>\n            <td>SD</td>\n        </tr>\n        <tr>\n            <td>TN</td>\n        </tr>\n        <tr>\n            <td>TX</td>\n        </tr>\n        <tr>\n            <td>UT</td>\n        </tr>\n        <tr>\n            <td>VA</td>\n        </tr>\n        <tr>\n            <td>VI</td>\n        </tr>\n        <tr>\n            <td>VT</td>\n        </tr>\n        <tr>\n            <td>WA</td>\n        </tr>\n        <tr>\n            <td>WI</td>\n        </tr>\n        <tr>\n            <td>WV</td>\n        </tr>\n        <tr>\n            <td>WY</td>\n        </tr>\n    </tbody>\n</table>\n```\n:::\n:::\n\n\n---\n\nNotice there are no duplicates in state names. Those are the 50 states plus Washington D.C. and several U.S. territories. We don't have to worry about duplicates in this case.\n\nWe could also have grouped by city and state, using two columns instead of one. Let's see how would that work.\n\n::: {#cell-27 .cell execution_count=14}\n``` {.python .cell-code}\n%%sql\nSELECT city, stabr\nFROM libraries_2018\nGROUP BY city, stabr\nORDER BY city, stabr\nLIMIT 20;\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n * sqlite:///dbs/w02/library.db\nDone.\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=14}\n```{=html}\n<table>\n    <thead>\n        <tr>\n            <th>city</th>\n            <th>stabr</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>ABBEVILLE</td>\n            <td>AL</td>\n        </tr>\n        <tr>\n            <td>ABBEVILLE</td>\n            <td>LA</td>\n        </tr>\n        <tr>\n            <td>ABBEVILLE</td>\n            <td>SC</td>\n        </tr>\n        <tr>\n            <td>ABBOTSFORD</td>\n            <td>WI</td>\n        </tr>\n        <tr>\n            <td>ABERDEEN</td>\n            <td>ID</td>\n        </tr>\n        <tr>\n            <td>ABERDEEN</td>\n            <td>SD</td>\n        </tr>\n        <tr>\n            <td>ABERNATHY</td>\n            <td>TX</td>\n        </tr>\n        <tr>\n            <td>ABILENE</td>\n            <td>KS</td>\n        </tr>\n        <tr>\n            <td>ABILENE</td>\n            <td>TX</td>\n        </tr>\n        <tr>\n            <td>ABINGDON</td>\n            <td>IL</td>\n        </tr>\n        <tr>\n            <td>ABINGDON</td>\n            <td>VA</td>\n        </tr>\n        <tr>\n            <td>ABINGTON</td>\n            <td>CT</td>\n        </tr>\n        <tr>\n            <td>ABINGTON</td>\n            <td>MA</td>\n        </tr>\n        <tr>\n            <td>ABINGTON</td>\n            <td>PA</td>\n        </tr>\n        <tr>\n            <td>ABIQUIU</td>\n            <td>NM</td>\n        </tr>\n        <tr>\n            <td>ABSECON</td>\n            <td>NJ</td>\n        </tr>\n        <tr>\n            <td>ACCOMAC</td>\n            <td>VA</td>\n        </tr>\n        <tr>\n            <td>ACKERMAN</td>\n            <td>MS</td>\n        </tr>\n        <tr>\n            <td>ACKLEY</td>\n            <td>IA</td>\n        </tr>\n        <tr>\n            <td>ACTON</td>\n            <td>MA</td>\n        </tr>\n    </tbody>\n</table>\n```\n:::\n:::\n\n\n---\n\nWe will limit the number of rows to 10, so we can see the result. The `LIMIT` clause is used to specify the maximum number of records to return. As you can see, the results are sorted by the first column, which is the city name and then by the state name. The `ORDER BY` clause is used to sort the result set in ascending or descending order. By default, it sorts in ascending order. We could have used the `DESC` keyword to sort in descending order. I will leave this as an exercise for you.\n\nBy combinint `GROUP BY` with an aggregate function, we can get the number of libraries in each state. Let's see how many libraries are in each state.\n\n::: {#cell-29 .cell execution_count=15}\n``` {.python .cell-code}\n%%sql\nSELECT stabr, count(*) as total\nFROM libraries_2018\nGROUP BY stabr\nORDER BY total DESC\nLIMIT 20;\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n * sqlite:///dbs/w02/library.db\nDone.\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=15}\n```{=html}\n<table>\n    <thead>\n        <tr>\n            <th>stabr</th>\n            <th>total</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>NY</td>\n            <td>756</td>\n        </tr>\n        <tr>\n            <td>IL</td>\n            <td>623</td>\n        </tr>\n        <tr>\n            <td>TX</td>\n            <td>560</td>\n        </tr>\n        <tr>\n            <td>IA</td>\n            <td>544</td>\n        </tr>\n        <tr>\n            <td>PA</td>\n            <td>451</td>\n        </tr>\n        <tr>\n            <td>MI</td>\n            <td>398</td>\n        </tr>\n        <tr>\n            <td>WI</td>\n            <td>381</td>\n        </tr>\n        <tr>\n            <td>MA</td>\n            <td>369</td>\n        </tr>\n        <tr>\n            <td>KS</td>\n            <td>325</td>\n        </tr>\n        <tr>\n            <td>NJ</td>\n            <td>295</td>\n        </tr>\n        <tr>\n            <td>ME</td>\n            <td>263</td>\n        </tr>\n        <tr>\n            <td>OH</td>\n            <td>251</td>\n        </tr>\n        <tr>\n            <td>NE</td>\n            <td>245</td>\n        </tr>\n        <tr>\n            <td>IN</td>\n            <td>236</td>\n        </tr>\n        <tr>\n            <td>NH</td>\n            <td>225</td>\n        </tr>\n        <tr>\n            <td>AL</td>\n            <td>224</td>\n        </tr>\n        <tr>\n            <td>CA</td>\n            <td>218</td>\n        </tr>\n        <tr>\n            <td>CT</td>\n            <td>192</td>\n        </tr>\n        <tr>\n            <td>TN</td>\n            <td>186</td>\n        </tr>\n        <tr>\n            <td>VT</td>\n            <td>184</td>\n        </tr>\n    </tbody>\n</table>\n```\n:::\n:::\n\n\n---\n\nThis is returning the values in the `stabr`column and the count of how many rows have a given `stabr` value. The `COUNT(*)` function counts all rows in each group. The `GROUP BY` clause groups the result set by the `stabr` column, and the `ORDER BY` clause sorts the result set by the count of libraries in descending order.\n\nLibrary agencies can have many branches. Not all of them will provide an outlet for the public to walk in and borrow books. Some of them are just a warehouse for books, or a place to store the books that are not in use. We can see how many branches are in each state by checking the `centlib` and `branlib` columns. You can use the `SUM()` function in this case. This will be left as an exercise for you.\n\nWe can also use `GROUP BY` to group by multiple columns. For example, we can verify how many libraries changed their addresses by state. The column `stataddr` contains a code indicating whether the agency's  address changed or not. The code is as follows:\n\n* 00 - No change\n* 07 - Moved to a new address\n* 15 - Minor address change\n\nThe code below will show how many libraries changed their address by state.\n\n::: {#cell-31 .cell execution_count=16}\n``` {.python .cell-code}\n%%sql\nSELECT stabr, stataddr, count(*) as total\nFROM libraries_2018\nGROUP BY stabr, stataddr\nORDER BY stabr, stataddr\nLIMIT 20;\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n * sqlite:///dbs/w02/library.db\nDone.\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=16}\n```{=html}\n<table>\n    <thead>\n        <tr>\n            <th>stabr</th>\n            <th>stataddr</th>\n            <th>total</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>AK</td>\n            <td>00</td>\n            <td>82</td>\n        </tr>\n        <tr>\n            <td>AL</td>\n            <td>00</td>\n            <td>220</td>\n        </tr>\n        <tr>\n            <td>AL</td>\n            <td>07</td>\n            <td>3</td>\n        </tr>\n        <tr>\n            <td>AL</td>\n            <td>15</td>\n            <td>1</td>\n        </tr>\n        <tr>\n            <td>AR</td>\n            <td>00</td>\n            <td>58</td>\n        </tr>\n        <tr>\n            <td>AR</td>\n            <td>07</td>\n            <td>1</td>\n        </tr>\n        <tr>\n            <td>AR</td>\n            <td>15</td>\n            <td>1</td>\n        </tr>\n        <tr>\n            <td>AS</td>\n            <td>00</td>\n            <td>1</td>\n        </tr>\n        <tr>\n            <td>AZ</td>\n            <td>00</td>\n            <td>88</td>\n        </tr>\n        <tr>\n            <td>AZ</td>\n            <td>15</td>\n            <td>1</td>\n        </tr>\n        <tr>\n            <td>CA</td>\n            <td>00</td>\n            <td>180</td>\n        </tr>\n        <tr>\n            <td>CA</td>\n            <td>07</td>\n            <td>2</td>\n        </tr>\n        <tr>\n            <td>CA</td>\n            <td>15</td>\n            <td>36</td>\n        </tr>\n        <tr>\n            <td>CO</td>\n            <td>00</td>\n            <td>113</td>\n        </tr>\n        <tr>\n            <td>CT</td>\n            <td>00</td>\n            <td>190</td>\n        </tr>\n        <tr>\n            <td>CT</td>\n            <td>07</td>\n            <td>1</td>\n        </tr>\n        <tr>\n            <td>CT</td>\n            <td>15</td>\n            <td>1</td>\n        </tr>\n        <tr>\n            <td>DC</td>\n            <td>00</td>\n            <td>1</td>\n        </tr>\n        <tr>\n            <td>DE</td>\n            <td>00</td>\n            <td>21</td>\n        </tr>\n        <tr>\n            <td>FL</td>\n            <td>00</td>\n            <td>79</td>\n        </tr>\n    </tbody>\n</table>\n```\n:::\n:::\n\n\n---\n\nAs expected, most libraries did not change their address.\n\n### 📙 Visits over the years\n\nWe saw before some negative numbers in the `visits` column due to the way data was collected. Now we turn to see the trends in library visits over the years. We will use the `SUM()` function to get the total number of visits for each year. The code below will show how many visits were made in each year. We will discard the negative values for this analysis. The `SUM()` function will ignore the negative values, so we don't have to worry about them.\n\n::: {#cell-34 .cell execution_count=17}\n``` {.python .cell-code}\n%%sql\nSELECT sum(visits) AS visits_2018\nFROM libraries_2018\nWHERE visits > 0;\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n * sqlite:///dbs/w02/library.db\nDone.\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=17}\n```{=html}\n<table>\n    <thead>\n        <tr>\n            <th>visits_2018</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>1292348697</td>\n        </tr>\n    </tbody>\n</table>\n```\n:::\n:::\n\n\n::: {#cell-35 .cell execution_count=18}\n``` {.python .cell-code}\n%%sql\nSELECT sum(visits) AS visits_2017\nFROM libraries_2017\nWHERE visits > 0;\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n * sqlite:///dbs/w02/library.db\nDone.\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=18}\n```{=html}\n<table>\n    <thead>\n        <tr>\n            <th>visits_2017</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>1319803999</td>\n        </tr>\n    </tbody>\n</table>\n```\n:::\n:::\n\n\n::: {#cell-36 .cell execution_count=19}\n``` {.python .cell-code}\n%%sql\nSELECT sum(visits) AS visits_2016\nFROM libraries_2016\nWHERE visits > 0;\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n * sqlite:///dbs/w02/library.db\nDone.\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=19}\n```{=html}\n<table>\n    <thead>\n        <tr>\n            <th>visits_2016</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>1355648987</td>\n        </tr>\n    </tbody>\n</table>\n```\n:::\n:::\n\n\n---\n\nWe went from 1.36 billion visits in 2016 to 1.32 billion in 2017, and then to 1.29 billion in 2018. This is a decrease of about 5% over the three years.\n\nBut we know that the number of libraries change as they close or open. To have a better idea of the trend, we will only consider libraries present in the three years. We can do this by using the `INNER JOIN` clause. The code below will show how many visits were made in each year, but only for libraries that were present in all three years.\n\n::: {#cell-38 .cell execution_count=20}\n``` {.python .cell-code}\n%%sql\nSELECT sum(pls18.visits) AS visits_2018,\n       sum(pls17.visits) AS visits_2017,\n       sum(pls16.visits) AS visits_2016\nFROM libraries_2018 AS pls18\n    JOIN libraries_2017 AS pls17 ON pls18.fscskey = pls17.fscskey\n    JOIN libraries_2016 AS pls16 ON pls18.fscskey = pls16.fscskey\nWHERE pls18.visits >= 0\n  AND pls17.visits >= 0\n  AND pls16.visits >= 0;\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n * sqlite:///dbs/w02/library.db\nDone.\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=20}\n```{=html}\n<table>\n    <thead>\n        <tr>\n            <th>visits_2018</th>\n            <th>visits_2017</th>\n            <th>visits_2016</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>1278148838</td>\n            <td>1319325387</td>\n            <td>1355078384</td>\n        </tr>\n    </tbody>\n</table>\n```\n:::\n:::\n\n\n---\n\nThe results didn't change much. We can also take a look at the number of wifi accesses the year in the same way we did for the visitors.\n\n::: {#cell-40 .cell execution_count=21}\n``` {.python .cell-code}\n%%sql\nSELECT sum(pls18.wifisess) AS wifisess_2018,\n       sum(pls17.wifisess) AS wifisess_2017,\n       sum(pls16.wifisess) AS wifisess_2016\nFROM libraries_2018 AS pls18\n    JOIN libraries_2017 AS pls17 ON pls18.fscskey = pls17.fscskey\n    JOIN libraries_2016 AS pls16 ON pls18.fscskey = pls16.fscskey\nWHERE pls18.wifisess >= 0\n  AND pls17.wifisess >= 0\n  AND pls16.wifisess >= 0;\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n * sqlite:///dbs/w02/library.db\nDone.\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=21}\n```{=html}\n<table>\n    <thead>\n        <tr>\n            <th>wifisess_2018</th>\n            <th>wifisess_2017</th>\n            <th>wifisess_2016</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>349767271</td>\n            <td>311336231</td>\n            <td>234926102</td>\n        </tr>\n    </tbody>\n</table>\n```\n:::\n:::\n\n\n---\n\nEven though the number of visitors decreased, the number of wifi accesses increased. This is a clear indication that people are using the library for more than just borrowing books. They are also using it as a place to study and work.\n\nTo investigate if the decrease in the number of visitors is a trend in all regions, we must group by state. The code below will show how many visits were made in each year, but only for libraries that were present in all three years.\n\n::: {#cell-42 .cell execution_count=22}\n``` {.python .cell-code}\n%%sql\nSELECT  pls2018.stabr,\n        sum(pls2018.visits) AS visits_2018,\n        sum(pls2017.visits) AS visits_2017,\n        sum(pls2016.visits) AS visits_2016,\n        round ( ( \n                 (sum(pls2018.visits) - sum(pls2017.visits) ) * 1.0 / sum(pls2017.visits) ) * 100, 1\n               ) AS visits_ratio_2018_2017,\n        round ( ( (sum(pls2017.visits) - sum(pls2016.visits) ) * 1.0 / \n                 sum(pls2016.visits) ) * 100, 1) AS visits_ratio_2017_2016\nFROM libraries_2018 AS pls2018\n    JOIN libraries_2017 AS pls2017 ON pls2018.fscskey = pls2017.fscskey\n    JOIN libraries_2016 AS pls2016 ON pls2018.fscskey = pls2016.fscskey\nWHERE pls2018.visits >= 0\n  AND pls2017.visits >= 0\n  AND pls2016.visits >= 0\nGROUP BY pls2018.stabr\nORDER BY visits_ratio_2018_2017 DESC;\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n * sqlite:///dbs/w02/library.db\nDone.\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=22}\n```{=html}\n<table>\n    <thead>\n        <tr>\n            <th>stabr</th>\n            <th>visits_2018</th>\n            <th>visits_2017</th>\n            <th>visits_2016</th>\n            <th>visits_ratio_2018_2017</th>\n            <th>visits_ratio_2017_2016</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>SD</td>\n            <td>3824804</td>\n            <td>3699212</td>\n            <td>3722376</td>\n            <td>3.4</td>\n            <td>-0.6</td>\n        </tr>\n        <tr>\n            <td>MT</td>\n            <td>4332900</td>\n            <td>4215484</td>\n            <td>4298268</td>\n            <td>2.8</td>\n            <td>-1.9</td>\n        </tr>\n        <tr>\n            <td>FL</td>\n            <td>68423689</td>\n            <td>66697122</td>\n            <td>70991029</td>\n            <td>2.6</td>\n            <td>-6.0</td>\n        </tr>\n        <tr>\n            <td>ND</td>\n            <td>2216377</td>\n            <td>2162189</td>\n            <td>2201730</td>\n            <td>2.5</td>\n            <td>-1.8</td>\n        </tr>\n        <tr>\n            <td>ID</td>\n            <td>8179077</td>\n            <td>8029503</td>\n            <td>8597955</td>\n            <td>1.9</td>\n            <td>-6.6</td>\n        </tr>\n        <tr>\n            <td>DC</td>\n            <td>3632539</td>\n            <td>3593201</td>\n            <td>3930763</td>\n            <td>1.1</td>\n            <td>-8.6</td>\n        </tr>\n        <tr>\n            <td>UT</td>\n            <td>15326963</td>\n            <td>15295494</td>\n            <td>16096911</td>\n            <td>0.2</td>\n            <td>-5.0</td>\n        </tr>\n        <tr>\n            <td>NH</td>\n            <td>7045010</td>\n            <td>7028800</td>\n            <td>7236567</td>\n            <td>0.2</td>\n            <td>-2.9</td>\n        </tr>\n        <tr>\n            <td>ME</td>\n            <td>6746380</td>\n            <td>6731768</td>\n            <td>6811441</td>\n            <td>0.2</td>\n            <td>-1.2</td>\n        </tr>\n        <tr>\n            <td>DE</td>\n            <td>4122181</td>\n            <td>4117904</td>\n            <td>4125899</td>\n            <td>0.1</td>\n            <td>-0.2</td>\n        </tr>\n        <tr>\n            <td>OK</td>\n            <td>13399265</td>\n            <td>13491194</td>\n            <td>13112511</td>\n            <td>-0.7</td>\n            <td>2.9</td>\n        </tr>\n        <tr>\n            <td>WY</td>\n            <td>3338772</td>\n            <td>3367413</td>\n            <td>3536788</td>\n            <td>-0.9</td>\n            <td>-4.8</td>\n        </tr>\n        <tr>\n            <td>MA</td>\n            <td>39926583</td>\n            <td>40453003</td>\n            <td>40427356</td>\n            <td>-1.3</td>\n            <td>0.1</td>\n        </tr>\n        <tr>\n            <td>WA</td>\n            <td>37338635</td>\n            <td>37916034</td>\n            <td>38634499</td>\n            <td>-1.5</td>\n            <td>-1.9</td>\n        </tr>\n        <tr>\n            <td>MN</td>\n            <td>22952388</td>\n            <td>23326303</td>\n            <td>24033731</td>\n            <td>-1.6</td>\n            <td>-2.9</td>\n        </tr>\n        <tr>\n            <td>NM</td>\n            <td>6908686</td>\n            <td>7036582</td>\n            <td>7178428</td>\n            <td>-1.8</td>\n            <td>-2.0</td>\n        </tr>\n        <tr>\n            <td>VA</td>\n            <td>33913162</td>\n            <td>34563079</td>\n            <td>35649602</td>\n            <td>-1.9</td>\n            <td>-3.0</td>\n        </tr>\n        <tr>\n            <td>KS</td>\n            <td>13483333</td>\n            <td>13737900</td>\n            <td>13699223</td>\n            <td>-1.9</td>\n            <td>0.3</td>\n        </tr>\n        <tr>\n            <td>NY</td>\n            <td>97921323</td>\n            <td>100012193</td>\n            <td>103081304</td>\n            <td>-2.1</td>\n            <td>-3.0</td>\n        </tr>\n        <tr>\n            <td>WI</td>\n            <td>30097183</td>\n            <td>30865470</td>\n            <td>31442577</td>\n            <td>-2.5</td>\n            <td>-1.8</td>\n        </tr>\n        <tr>\n            <td>AL</td>\n            <td>14188647</td>\n            <td>14583055</td>\n            <td>15637164</td>\n            <td>-2.7</td>\n            <td>-6.7</td>\n        </tr>\n        <tr>\n            <td>MI</td>\n            <td>44758918</td>\n            <td>46052561</td>\n            <td>46734166</td>\n            <td>-2.8</td>\n            <td>-1.5</td>\n        </tr>\n        <tr>\n            <td>CO</td>\n            <td>31085356</td>\n            <td>31975615</td>\n            <td>32011432</td>\n            <td>-2.8</td>\n            <td>-0.1</td>\n        </tr>\n        <tr>\n            <td>NJ</td>\n            <td>40947978</td>\n            <td>42181061</td>\n            <td>42429576</td>\n            <td>-2.9</td>\n            <td>-0.6</td>\n        </tr>\n        <tr>\n            <td>CA</td>\n            <td>146656984</td>\n            <td>151056672</td>\n            <td>155613529</td>\n            <td>-2.9</td>\n            <td>-2.9</td>\n        </tr>\n        <tr>\n            <td>CT</td>\n            <td>20423515</td>\n            <td>21051597</td>\n            <td>21603777</td>\n            <td>-3.0</td>\n            <td>-2.6</td>\n        </tr>\n        <tr>\n            <td>RI</td>\n            <td>5490076</td>\n            <td>5669309</td>\n            <td>5778025</td>\n            <td>-3.2</td>\n            <td>-1.9</td>\n        </tr>\n        <tr>\n            <td>PA</td>\n            <td>40885876</td>\n            <td>42243049</td>\n            <td>44105513</td>\n            <td>-3.2</td>\n            <td>-4.2</td>\n        </tr>\n        <tr>\n            <td>OR</td>\n            <td>19592295</td>\n            <td>20244499</td>\n            <td>20391927</td>\n            <td>-3.2</td>\n            <td>-0.7</td>\n        </tr>\n        <tr>\n            <td>IN</td>\n            <td>30836051</td>\n            <td>31849195</td>\n            <td>33363879</td>\n            <td>-3.2</td>\n            <td>-4.5</td>\n        </tr>\n        <tr>\n            <td>IA</td>\n            <td>16674976</td>\n            <td>17245764</td>\n            <td>17753953</td>\n            <td>-3.3</td>\n            <td>-2.9</td>\n        </tr>\n        <tr>\n            <td>NV</td>\n            <td>9334070</td>\n            <td>9684935</td>\n            <td>9733359</td>\n            <td>-3.6</td>\n            <td>-0.5</td>\n        </tr>\n        <tr>\n            <td>NE</td>\n            <td>7449868</td>\n            <td>7726127</td>\n            <td>7873829</td>\n            <td>-3.6</td>\n            <td>-1.9</td>\n        </tr>\n        <tr>\n            <td>VT</td>\n            <td>3526357</td>\n            <td>3673501</td>\n            <td>3721332</td>\n            <td>-4.0</td>\n            <td>-1.3</td>\n        </tr>\n        <tr>\n            <td>SC</td>\n            <td>13989511</td>\n            <td>14567585</td>\n            <td>15802934</td>\n            <td>-4.0</td>\n            <td>-7.8</td>\n        </tr>\n        <tr>\n            <td>AK</td>\n            <td>3268073</td>\n            <td>3402486</td>\n            <td>3467234</td>\n            <td>-4.0</td>\n            <td>-1.9</td>\n        </tr>\n        <tr>\n            <td>IL</td>\n            <td>63466887</td>\n            <td>66166082</td>\n            <td>67336230</td>\n            <td>-4.1</td>\n            <td>-1.7</td>\n        </tr>\n        <tr>\n            <td>NC</td>\n            <td>31263894</td>\n            <td>32621293</td>\n            <td>33605264</td>\n            <td>-4.2</td>\n            <td>-2.9</td>\n        </tr>\n        <tr>\n            <td>MD</td>\n            <td>24976429</td>\n            <td>26089963</td>\n            <td>27481583</td>\n            <td>-4.3</td>\n            <td>-5.1</td>\n        </tr>\n        <tr>\n            <td>AZ</td>\n            <td>23439707</td>\n            <td>24584201</td>\n            <td>25315276</td>\n            <td>-4.7</td>\n            <td>-2.9</td>\n        </tr>\n        <tr>\n            <td>OH</td>\n            <td>68176967</td>\n            <td>71895854</td>\n            <td>74119719</td>\n            <td>-5.2</td>\n            <td>-3.0</td>\n        </tr>\n        <tr>\n            <td>WV</td>\n            <td>4944242</td>\n            <td>5231251</td>\n            <td>5231443</td>\n            <td>-5.5</td>\n            <td>-0.0</td>\n        </tr>\n        <tr>\n            <td>MO</td>\n            <td>24663467</td>\n            <td>26117633</td>\n            <td>27065546</td>\n            <td>-5.6</td>\n            <td>-3.5</td>\n        </tr>\n        <tr>\n            <td>KY</td>\n            <td>16910828</td>\n            <td>17909495</td>\n            <td>18028488</td>\n            <td>-5.6</td>\n            <td>-0.7</td>\n        </tr>\n        <tr>\n            <td>LA</td>\n            <td>16227594</td>\n            <td>17211007</td>\n            <td>20262385</td>\n            <td>-5.7</td>\n            <td>-15.1</td>\n        </tr>\n        <tr>\n            <td>TX</td>\n            <td>66168387</td>\n            <td>70514138</td>\n            <td>70975901</td>\n            <td>-6.2</td>\n            <td>-0.7</td>\n        </tr>\n        <tr>\n            <td>TN</td>\n            <td>18102460</td>\n            <td>19396554</td>\n            <td>18701973</td>\n            <td>-6.7</td>\n            <td>3.7</td>\n        </tr>\n        <tr>\n            <td>GA</td>\n            <td>26835701</td>\n            <td>28816233</td>\n            <td>27987249</td>\n            <td>-6.9</td>\n            <td>3.0</td>\n        </tr>\n        <tr>\n            <td>AR</td>\n            <td>9551686</td>\n            <td>10358181</td>\n            <td>10596035</td>\n            <td>-7.8</td>\n            <td>-2.2</td>\n        </tr>\n        <tr>\n            <td>GU</td>\n            <td>75119</td>\n            <td>81572</td>\n            <td>71813</td>\n            <td>-7.9</td>\n            <td>13.6</td>\n        </tr>\n        <tr>\n            <td>MS</td>\n            <td>7602710</td>\n            <td>8581994</td>\n            <td>8915406</td>\n            <td>-11.4</td>\n            <td>-3.7</td>\n        </tr>\n        <tr>\n            <td>HI</td>\n            <td>3456131</td>\n            <td>4135229</td>\n            <td>4490320</td>\n            <td>-16.4</td>\n            <td>-7.9</td>\n        </tr>\n        <tr>\n            <td>AS</td>\n            <td>48828</td>\n            <td>67848</td>\n            <td>63166</td>\n            <td>-28.0</td>\n            <td>7.4</td>\n        </tr>\n    </tbody>\n</table>\n```\n:::\n:::\n\n\n---\n\n## 1.4 Filtering Groups with HAVING\n\nThe `HAVING` clause is used to filter records that work on summarized GROUP BY results. It is similar to the `WHERE` clause, but it is used for filtering groups instead of individual rows.\n\nLet's try to compare libraries located in a state with similar characteristics. For that, we will use `HAVING` to place conditions on gorups created by aggregating.\n\n::: {#cell-44 .cell execution_count=23}\n``` {.python .cell-code}\n%%sql\nSELECT pls2018.stabr,\nsum(pls2018.visits) AS visits_2018,\nsum(pls2017.visits) AS visits_2017,\nsum(pls2016.visits) AS visits_2016,\nround ( ( \n         (sum(pls2018.visits) - sum(pls2017.visits) ) * 1.0 / sum(pls2017.visits) ) * 100, 1\n       ) AS visits_ratio_2018_2017,\nround ( ( (sum(pls2017.visits) - sum(pls2016.visits) ) * 1.0 / \n         sum(pls2016.visits) ) * 100, 1) AS visits_ratio_2017_2016\nFROM libraries_2018 AS pls2018\n    JOIN libraries_2017 AS pls2017 ON pls2018.fscskey = pls2017.fscskey\n    JOIN libraries_2016 AS pls2016 ON pls2018.fscskey = pls2016.fscskey\nWHERE pls2018.visits >= 0\n  AND pls2017.visits >= 0\n  AND pls2016.visits >= 0\nGROUP BY pls2018.stabr\nHAVING sum(pls2018.visits) > 50000000\nORDER BY visits_ratio_2018_2017 DESC;\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n * sqlite:///dbs/w02/library.db\nDone.\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=23}\n```{=html}\n<table>\n    <thead>\n        <tr>\n            <th>stabr</th>\n            <th>visits_2018</th>\n            <th>visits_2017</th>\n            <th>visits_2016</th>\n            <th>visits_ratio_2018_2017</th>\n            <th>visits_ratio_2017_2016</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>FL</td>\n            <td>68423689</td>\n            <td>66697122</td>\n            <td>70991029</td>\n            <td>2.6</td>\n            <td>-6.0</td>\n        </tr>\n        <tr>\n            <td>NY</td>\n            <td>97921323</td>\n            <td>100012193</td>\n            <td>103081304</td>\n            <td>-2.1</td>\n            <td>-3.0</td>\n        </tr>\n        <tr>\n            <td>CA</td>\n            <td>146656984</td>\n            <td>151056672</td>\n            <td>155613529</td>\n            <td>-2.9</td>\n            <td>-2.9</td>\n        </tr>\n        <tr>\n            <td>IL</td>\n            <td>63466887</td>\n            <td>66166082</td>\n            <td>67336230</td>\n            <td>-4.1</td>\n            <td>-1.7</td>\n        </tr>\n        <tr>\n            <td>OH</td>\n            <td>68176967</td>\n            <td>71895854</td>\n            <td>74119719</td>\n            <td>-5.2</td>\n            <td>-3.0</td>\n        </tr>\n        <tr>\n            <td>TX</td>\n            <td>66168387</td>\n            <td>70514138</td>\n            <td>70975901</td>\n            <td>-6.2</td>\n            <td>-0.7</td>\n        </tr>\n    </tbody>\n</table>\n```\n:::\n:::\n\n\n---\n\nWe are including only rows with a sum greater than 50 million visitors in 2018. We got six states as a result of this arbitrary condition. Only Florida experienced an increase in the number of visitors from 2017 to 2018.\n\n",
    "supporting": [
      "week02-library_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}